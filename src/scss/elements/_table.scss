@import '../core/mixins';

$table-color: $text-strong !default;
$table-background-color: color('white') !default;

$table-cell-border: 1px solid $border !default;
$table-cell-border-width: 0 0 1px !default;
$table-cell-padding: 0.5em 0.75em !default;
$table-cell-heading-color: $text-strong !default;

$table-head-cell-border-width: 0 0 2px !default;
$table-head-cell-color: $text-strong !default;
$table-foot-cell-border-width: 2px 0 0 !default;
$table-foot-cell-color: $text-strong !default;

$table-head-background-color: transparent !default;
$table-body-background-color: transparent !default;
$table-foot-background-color: transparent !default;

$table-row-hover-background-color: color('white-bis') !default;

$table-row-active-background-color: color('primary') !default;
$table-row-active-color: color('primary-invert') !default;

$table-striped-row-even-background-color: color('white-bis') !default;
$table-striped-row-even-hover-background-color: color('white-ter') !default;

$table-colors: $colors !default;
$allowed-colors: ('primary', 'success', 'info', 'warning', 'danger') !default;

.table {
  @extend %block;

  background-color: $table-background-color;
  color: $table-color;

  td, th {
    border: $table-cell-border;
    border-width: $table-cell-border-width;
    padding: $table-cell-padding;
    vertical-align: top;

    @each $name, $value in $table-colors {
      @if keyInList($allowed-colors, $name) {
        &.#{$name} {
          background-color: color($name);
          border-color: color($name);
          color: color('#{$name}-invert');
        }
      }
    }

    &.narrow {
      white-space: nowrap;
      width: 1%;
    }

    &.selected {
      background-color: $table-row-active-background-color;
      color: $table-row-active-color;

      a, strong {
        color: currentColor;
      }
    }

    &.y-centered {
      vertical-align: middle;
    }

    &.x-centered {
      text-align: middle;
    }
  }

  th {
    color: $table-cell-heading-color;

    &:not([align]) {
      text-align: inherit;
    }
  }

  tr {
    &.selected {
      background-color: $table-row-active-background-color;
      color: $table-row-active-color;

      a, strong {
        color: currentColor;
      }

      td, th {
        border-color: $table-row-active-color;
        color: currentColor;
      }
    }
  }

  thead {
    background-color: $table-head-background-color;

    td, th {
      border-width: $table-head-cell-border-width;
      color: $table-head-cell-color;
    }
  }

  tfoot {
    background-color: $table-foot-background-color;

    td, th {
      border-width: $table-foot-cell-border-width;
      color: $table-foot-cell-color;
    }
  }

  tbody {
    background-color: $table-body-background-color;

    tr {
      &:last-child {
        td, th {
          border-bottom-width: 0;
        }
      }
    }
  }

  &.bordered {
    td, th {
      border-width: 1px;
    }

    tr {
      &:last-child {
        td, th {
          border-bottom-width: 1px;
        }
      }
    }
  }

  &.fullwidth {
    width: 100%;
  }

  &.hoverable {
    tbody {
      tr:not(.selected) {
        &:hover {
          background-color: $table-row-hover-background-color;
        }
      }
    }

    &.striped {
      tbody {
        tr:not(.selected) {
          &:hover {
            background-color: $table-row-hover-background-color;
            &:nth-child(even) {
              background-color: $table-striped-row-even-hover-background-color;
            }
          }
        }
      }
    }
  }

  &.narrow {
    td, th {
      padding: 0.25em 0.5em;
    }
  }

  &.striped {
    tbody {
      tr:not(.selected) {
        &:nth-child(even) {
          background-color: $table-striped-row-even-background-color;
        }
      }
    }
  }

  &.x-centered {
    text-align: center;
  }

  &.y-centered {
    td, th {
      vertical-align: middle;
    }
  }
}

.table-container {
  @extend %block;
  @include overflow-touch;

  overflow: auto;
  overflow-y: hidden;
  max-width: 100%;
}
